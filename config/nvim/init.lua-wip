o = vim.opt

o.breakindent = true
o.cursorline = false
o.gdefault = true
o.mouse = "a"
o.number = false
o.scrolloff = 21
o.shortmess = "Ita"
o.showcmd = false
o.showmode = false
o.signcolumn = "yes:1"
o.smartcase = true
o.swapfile = false
o.timeoutlen = 300
o.updatetime = 250

o.statusline=" %f %m%r %= %{&filetype} | %{&fenc} | %3l  "

vim.schedule(function()
  o.clipboard = "unnamedplus"
end)

g = vim.g

g.mapleader = " "
g.maplocalleader = ","

s = vim.keymap.set

s("i", "jk", "<esc>")
s("n", "<bs>", ":nohl<cr>")
s("n", "*", "g*")
s("n", "-", ":Ex<cr>")
s("n", "<c-h>", "<c-w><c-h>")
s("n", "<c-l>", "<c-w><c-l>")
s("n", "<c-j>", "<c-w><c-j>")
s("n", "<c-k>", "<c-w><c-k>")
s("n", "<c-up>", ":resize +2<cr>")
s("n", "<c-down>", ":resize -2<cr>")
s("n", "<c-left>", ":vertical resize -2<cr>")
s("n", "<c-right>", ":vertical resize +2<cr>")
s("n", "<S-h>", ":bprevious<cr>")
s("n", "<S-l>", ":bnext<cr>")
s("n", "]g", function () vim.diagnostic.goto_next {float=false} end)
s("n", "[g", function () vim.diagnostic.goto_prev {float=false} end)
s("n", "s", "<Plug>(leap)")
s("n", "S", "<Plug>(leap-from-window)")

h = function (g, m)
  vim.api.nvim_set_hl(0, g, m)
end

for hlgroup, _ in pairs(vim.api.nvim_get_hl(0, {})) do
  if type(hlgroup) == "string" then
    h(hlgroup, {fg="#101010", bg="#fdfdfd"})
  end
end

h("Search",        {bg="#faefd8"})
h("IncSearch",     {bg="#faefd8"})
h("CurSearch",     {bg="#f9edd8"})
h("Visual",        {bg="#e3eefd"})
h("VisualNOS",     {bg="#e3eefd"})
h("MatchParen",    {bg="#e3eefd"})
h("Pmenu",         {bg="#f0f0f0"})
h("PmenuSel",      {bg="#d9d9d9"})
h("StatusLine",    {bg="#ebebeb"}) 
h("WinSeparator",  {fg="#ebebeb"})
h("EndOfBuffer",   {fg="#fefefe"})
h("Comment",       {fg="#9c9ea3"}) 
h("@comment",      {fg="#9c9ea3"})
h("FloatBorder",   {fg="#9c9c9c"})
h("LeapLabelPrimary",          {bg="#fadffa"})
h("DiagnosticUnderlineError",  {bg="#fbe5e5"})
h("DiagnosticUnderlineWarn",   {bg="#fbe5e5"})
h("DiagnosticUnderlineInfo",   {bg="#fbe5e5"})
h("DiagnosticUnderlineHint",   {bg="#fbe5e5"}) 
h("DiagnosticUnnecessary",     {bg="#fbe5e5"}) 
h("DiagnosticDeprecated",      {bg="#fbe5e5"})
h("DiagnosticFloatingError",   {fg="#030303"})

h("@string.lua", {fg="green"})
h("@boolean.lua", {fg="purple"})
h("@number.lua", {fg="#B30000"})
h("@keyword.lua", {fg="#1010BA"})
h("@keyword.repeat.lua", {fg="#0505B0"})
h("@keyword.conditional.lua", {fg="#0505B0"})
h("@keyword.function.lua", {fg="#0505B0"})

vim.diagnostic.config {virtual_text=false}

vim.fn.sign_define("DiagnosticSignWarn", {text=""})
vim.fn.sign_define("DiagnosticSignError", {text=""})
